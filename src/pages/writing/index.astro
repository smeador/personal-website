---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import SearchBar from '../../components/writing/SearchBar.tsx';
import ArticleCard from '../../components/writing/ArticleCard.tsx';

// Get all articles and sort by date (newest first)
const allArticles = await getCollection('articles');
const sortedArticles = allArticles.sort((a, b) => 
  b.data.date.getTime() - a.data.date.getTime()
);

// Separate featured articles
const featuredArticles = sortedArticles.filter(article => article.data.featured);
const regularArticles = sortedArticles.filter(article => !article.data.featured);
---

<BaseLayout 
  title="Writing - Sean Meador" 
  description="Explore my thoughts on technology, development, and the digital world through in-depth articles and insights."
>
  <!-- Hero Section -->
  <section class="py-16 px-4">
    <div class="container mx-auto max-w-4xl text-center">
      <h1 class="text-4xl md:text-5xl font-bold text-foreground mb-4">
        Writing
      </h1>
      <p class="text-xl text-muted-foreground max-w-2xl mx-auto">
        Exploring technology, development practices, and the intersection of code and creativity
      </p>
    </div>
  </section>

  <!-- Search Bar -->
  <SearchBar client:load />

  <!-- Articles Grid -->
  <section class="py-16 px-4">
    <div class="container mx-auto max-w-6xl">
      
      <!-- Featured Articles -->
      {featuredArticles.length > 0 && (
        <div class="mb-16">
          <h2 class="text-2xl font-bold text-foreground mb-8 text-center">
            Featured Articles
          </h2>
          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {featuredArticles.map((article, index) => (
              <ArticleCard 
                article={article} 
                index={index}
                client:load 
              />
            ))}
          </div>
        </div>
      )}

      <!-- All Articles -->
      <div>
        <h2 class="text-2xl font-bold text-foreground mb-8 text-center">
          {featuredArticles.length > 0 ? 'All Articles' : 'Articles'}
        </h2>
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {sortedArticles.map((article, index) => (
            <ArticleCard 
              article={article} 
              index={index}
              client:load 
            />
          ))}
        </div>
        
        {sortedArticles.length === 0 && (
          <div class="text-center py-16">
            <div class="text-6xl mb-4">üìù</div>
            <h3 class="text-xl font-semibold text-foreground mb-2">
              No articles yet
            </h3>
            <p class="text-muted-foreground">
              Articles will appear here once they're published.
            </p>
          </div>
        )}
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>